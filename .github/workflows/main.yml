name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build all Docker services
        run: docker compose -f examples/docker-compose.yml build

      - name: Run containers
        run: docker compose -f examples/docker-compose.yml up -d

      - name: Wait for containers to start
        run: sleep 20   # increased wait time

      - name: Test all endpoints (continue even if some fail)
        run: |
          echo "üîç Testing all running containers..."

          NODE_OK=false
          PYTHON_OK=false
          SQLITE_OK=false

          # Test Node app (port 3200)
          for i in {1..5}; do
            if curl -fs http://localhost:3200; then
              echo "‚úÖ Node app is running!"
              NODE_OK=true
              break
            else
              echo "‚è≥ Retrying Node app... ($i)"
              sleep 3
            fi
          done

          # Test Python app (port 5000)
          for i in {1..5}; do
            if curl -fs http://localhost:5000; then
              echo "‚úÖ Python app is running!"
              PYTHON_OK=true
              break
            else
              echo "‚è≥ Retrying Python app... ($i)"
              sleep 3
            fi
          done

          # Test Python SQLite app (port 6000)
          for i in {1..5}; do
            if curl -fs http://localhost:6000; then
              echo "‚úÖ SQLite app is running!"
              SQLITE_OK=true
              break
            else
              echo "‚è≥ Retrying SQLite app... ($i)"
              sleep 3
            fi
          done

          echo "---------------------------------------"
          echo "üß™ Test Summary:"
          echo "Node app:    $NODE_OK"
          echo "Python app:  $PYTHON_OK"
          echo "SQLite app:  $SQLITE_OK"

          # Exit with error if ALL failed (optional)
          if [ "$NODE_OK" = false ] && [ "$PYTHON_OK" = false ] && [ "$SQLITE_OK" = false ]; then
            echo "‚ùå All containers failed ‚Äî exiting workflow."
            exit 1
          else
            echo "‚úÖ At least one container started successfully."
          fi

      - name: Stop containers
        run: docker compose -f examples/docker-compose.yml down
